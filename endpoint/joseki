#! /bin/sh

### BEGIN INIT INFO
# Provides:          joseki
# Required-Start:    $local_fs $remote_fs
# Required-Stop:     $local_fs $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start/stop joseki server
### END INIT INFO

# Joseki specific variables, cf. $JOSEKIROOT/bin/rdfserver
export JOSEKIROOT=/opt/joseki
CP="$($JOSEKIROOT/bin/joseki_path)"

LOGCONFIG=${LOGCONFIG:-file:$JOSEKIROOT/etc/log4j.properties}
LOG="-Dlog4j.configuration=${LOGCONFIG}"
JAVA_ARGS="-server -Xmx1G" 

# If Jetty needs to handle very large incoming requests (e.g. SPARQL/Update)
# you may need to add ...
# JAVA_ARGS="$JAVA_ARGS -Dorg.mortbay.jetty.Request.maxFormContentSize=500000"


# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Joseki RDF Server"
NAME="joseki"
DAEMON=/usr/bin/java
DAEMON_ARGS="$JAVA_ARGS -cp "$CP" $LOG joseki.rdfserver"
CHDIR=$JOSEKIROOT
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/joseki
#the user that will run the script
USER=tomcat6

# NO NEED TO MODIFY THE LINES BELOW

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
	start-stop-daemon -b --start --quiet --chdir $CHDIR --chuid $USER -m -p $PIDFILE --exec $DAEMON -- $DAEMON_ARGS \
		|| return 2
}

#
# Function that stops the daemon/service
#
do_stop()
{
	start-stop-daemon --stop --quiet --oknodo --pidfile $PIDFILE
	RETVAL="$?"
	rm -f $PIDFILE
	return "$RETVAL"
}

case "$1" in
  start)
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  stop)
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  restart)
	#
	# If the "reload" option is implemented then remove the
	# 'force-reload' alias
	#
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	  0|1)
		do_start
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 1 ;; # Old process is still running
			*) log_end_msg 1 ;; # Failed to start
		esac
		;;
	  *)
	  	# Failed to stop
		log_end_msg 1
		;;
	esac
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|restart}" >&2
	exit 3
	;;
esac

:

